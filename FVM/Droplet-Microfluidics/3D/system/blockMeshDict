/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  8
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.000001;

vertices
(
    (0      0       0)      // vertex number 0
    (250    0       0)      // vertex number 1
    (250    100     0)      // vertex number 2
    (0      100     0)      // vertex number 3
    (0      0       100)    // vertex number 4
    (250    0       100)    // vertex number 5
    (250    100     100)    // vertex number 6
    (0      100     100)    // vertex number 7
    (250    0       -200)   // vertex number 8
    (350    0       -200)   // vertex number 9
    (350    100     -200)   // vertex number 10
    (250    100     -200)   // vertex number 11
    (250    0       0)      // vertex number 12
    (350    0       0)      // vertex number 13
    (350    100     0)      // vertex number 14
    (250    100     0)      // vertex number 15
    (250    0       100)    // vertex number 16
    (350    0       100)    // vertex number 17
    (350    100     100)    // vertex number 18
    (250    100     100)    // vertex number 19
    (250    0       300)    // vertex number 20
    (350    0       300)    // vertex number 21
    (350    100     300)    // vertex number 22
    (250    100     300)    // vertex number 23
);

blocks
(
    hex (0 1 2 3 4 5 6 7) (100 40 40) simpleGrading (1 1 1)
    hex (8 9 10 11 12 13 14 15) (40 40 80) simpleGrading (1 1 1)
    hex (12 13 14 15 16 17 18 19) (40 40 40) simpleGrading (1 1 1)
    hex (16 17 18 19 20 21 22 23) (40 40 80) simpleGrading (1 1 1)
);

edges
(
);

boundary
(
    Wall
    {
        type wall;
        faces
        (
            (4 5 6 7)
            (0 1 2 3)
            (8 12 15 11)
            (16 20 23 19)
            (9 10 14 13)
            (13 14 18 17)
            (17 18 22 21)
            (0 1 5 4)
            (3 7 6 2)
            (8 9 13 12)
            (11 15 14 10)
            (12 13 17 16)
            (15 19 18 14)
            (16 17 21 20)
            (19 23 22 18)
        );
    }

    Inlet
    {
        type patch;
        faces
        (
            (0 4 7 3)
        );
    }
    Outlet1
    {
        type patch;
        faces
        (
            (8 11 10 9)
        );
    }
    Outlet2
    {
        type patch;
        faces
        (
            (20 21 22 23)
        );
    }
    mergeMaster
    {
        type patch;
        faces
        (
            (2 6 5 1)
        );
    }
    mergeSlave
    {
        type patch;
        faces
        (
            (12 16 19 15)
        );
    }
);

mergePatchPairs
(
    (mergeMaster mergeSlave)
);

// ************************************************************************* //
